{"version":3,"sources":["services/api.js","components/UserData.js","components/UserList.js","components/ActiveUser.js","components/SearchBar.js","components/FormChangeModal.js","components/FormAddModal.js","components/RemChanAdd.js","components/App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseUrl","BASE_URL","deleteUserItem","id","delete","concat","then","response","status","addUserItem","item","post","data","UserData","_ref","user","update","index","react_default","a","createElement","onClick","active","src","image","alt","className","name","phone","UserList","users","map","key","ActiveUser","phrase","SearchBar","dataSearch","term","e","value","target","toLowerCase","filter","includes","type","placeholder","onChange","INITIAL_STATE","FormChangeModal","state","handleKeyPress","code","_this","props","closeModal","reset","setState","Object","objectSpread","handleSubmit","act","_this$props","put","handleChangeName","_this$props2","handleChangePhrase","_this$props3","handleChange2","_this$props4","match","window","addEventListener","this","removeEventListener","_this2","_this$props5","_this$state","Component","FormAddModal","newData","load","preventDefault","API","responseNewData","handleChange1","defineProperty","onSubmit","RemChanAdd","isModalOpen1","isModalOpen2","isSignAdd","openModal1","openModal2","rem","find","isOk","FormChangeModal_FormChangeModal","FormAddModal_FormAddModal","App","loadData","get","initialData","config","updateData","bind","RemChanAdd_RemChanAdd","Boolean","location","hostname","ReactDOM","render","BrowserRouter","Route","component","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42e20cd8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//axios.defaults.baseUrl = 'https://Andrew61-20.github.io/Phones/server/users';\r\naxios.defaults.baseUrl = 'http://localhost:3001/users';\r\nconst BASE_URL = 'http://localhost:3001/users';\r\n//const BASE_URL = 'https://Andrew61-20.github.io/Phones/server/users';\r\n\r\nconst getAllUsersItems = () =>\r\n  axios.get (BASE_URL).then(response => {\r\n    return response.data;\r\n  });    \r\n  \r\nconst deleteUserItem = id => \r\n  axios.delete (`${BASE_URL}/${id}`).then(response => response.status === 200)\r\n   \r\n\r\nconst addUserItem = item =>\r\n  axios.post(BASE_URL, item).then(response => {\r\n      return response.data;\r\n    });\r\n\t\r\nexport { getAllUsersItems, deleteUserItem, addUserItem };\r\n    ","import React from \"react\";\r\n\r\nexport default ({ user, update, index}) => {\r\n    return (\r\n      <tr onClick={() => update({active: index})}>\r\n        <td><img src={`../images/${user.image}.jpg`} alt=\"\" className=\"user-image\" /></td>\r\n        <td>{user.name}</td>\r\n        <td>{user.phone}</td>\r\n      </tr>\r\n    );\r\n}","import React from \"react\";\r\nimport UserData from \"./UserData\";\r\n\r\nexport default ({data, update}) => {\r\n    if(!data) {return (<p>Loading...</p>);}\r\n\r\n    const users = data.map((user, index) => {\r\n        return (\r\n            <UserData user={user} index={index} key={`user-${index}`} update={update} />\r\n        )\r\n    });\r\n\r\n    return (\r\n        <table className=\"user-list table table-striped\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Image</th>\r\n                    <th>Name</th>\r\n                    <th>Phone</th>\r\n                </tr>\r\n            </thead>\r\n           <tbody>\r\n                {users}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default ({ data, active}) => {\r\n    if (!data || !data[active]) {return <h4> Nothing found :(</h4>;}\r\n    const user = data[active];\r\n\r\n    return (\r\n        <div className=\"thumbnail\">\r\n            <img src={`../images/${user.image}.jpg`} alt=\"\" />\r\n            <div className=\"thumbnail-caption\">\r\n                <h3>{user.name}</h3>\r\n                <table className=\"user-info table table-responsive\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Favorite animal:</td>\r\n                            <td>{user.image}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Phone:</td>\r\n                            <td>{user.phone}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <p><b>Favorite phrase: </b>{user.phrase}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default ({dataSearch, term, data, update}) => {\r\n    \r\n    dataSearch = (e) => {\r\n        const value = e.target.value.toLowerCase();\r\n        const filter = data.filter(user => {\r\n           return user.name.toLowerCase().includes(value);\r\n        });\r\n\r\n        update ({\r\n            data: filter,\r\n            active: 0,\r\n            term: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"searchbar form-group\">\r\n            <input\r\n              value={term}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search people by name...\"\r\n              onChange={dataSearch}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  phone: \"\",\r\n  phrase: \"\"\r\n}\r\n\r\nexport default class FormChangeModal extends Component {\r\n  \r\n  state = { ...INITIAL_STATE   };\r\n \r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') return;\r\n    this.props.closeModal();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  handleSubmit = (act) => {\r\n    const {data, update, closeModal } = this.props;\r\n    closeModal();\r\n    axios.put(`http://localhost:3001/users/${act.id}`, {\r\n      name: act.name,\r\n      phone: act.phone,\r\n      image: act.image \r\n    }).then(response => {\r\n        update({data: data, active: 0})\r\n      })\r\n  }\r\n \r\n  handleChangeName = (e) => {\r\n    const {data, active } = this.props\r\n    this.setState({name: e.target.value})\r\n    data[active].name = e.target.value\r\n  }\r\n  \r\n  handleChangePhrase = (e) => {\r\n    const {data, active } = this.props\r\n    this.setState({phrase: e.target.value})\r\n    data[active].phrase = e.target.value\r\n  } \r\n\r\n  handleChange2 = (e) => {\r\n    const { data, active} = this.props\r\n    this.setState({phone: e.target.value})\r\n    const pattern = /[(]\\d{3}[)]\\d{3}[-]\\d{2}[-]\\d{2}/g\r\n    if(e.target.value.match(pattern)) {\r\n      data[active].phone = e.target.value;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { closeModal, data, active } = this.props;\r\n    const {name, phone, phrase} = this.state;\r\n    return ( \r\n      <div className=\"FormModal\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={(e) => this.handleChangeName(e)}\r\n          placeholder=\"Name and Surname\"\r\n        />\r\n        <br />\r\n        <label>№ тел. в формате (111)111-11-11</label>\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          value={phone}\r\n          onChange={(e) => this.handleChange2(e)}\r\n          placeholder=\"Phone Number\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phrase\"\r\n          value={phrase}\r\n          onChange={(e) => this.handleChangePhrase(e)}\r\n          placeholder=\"Favorite Phrase\"\r\n        />\r\n        <br />\r\n        <button type=\"button\" onClick={closeModal}>\r\n          Закрыть\r\n        </button>\r\n        <button type=\"button\" onClick={() => this.handleSubmit(data[active])}>\r\n          Подтвердить изменение\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport * as API from \"../services/api.js\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  phone: \"\",\r\n  phrase: \"\"\r\n }\r\n\r\nexport default class FormAddModal extends Component {\r\n  \r\n  state = { ...INITIAL_STATE   };\r\n   \r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') return;\r\n    this.props.closeModal();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  handleSubmit = (newData, e) => {\r\n    const { closeModal, load } = this.props;\r\n    closeModal();\r\n    e.preventDefault();\r\n    API.addUserItem(newData).then(responseNewData => {\r\n      load()\r\n    })\r\n  }\r\n\r\n  handleChange1 = ({target}) => {\r\n    const {name, value} = target;\r\n    this.setState({[name]: value})\r\n  }\r\n\r\n  handleChange2 = (e) => {\r\n   const pattern = /[(]\\d{3}[)]\\d{3}[-]\\d{2}[-]\\d{2}/g\r\n   this.setState({phone: e.target.value.match(pattern)})\r\n  }\r\n\r\n  render() {\r\n    const { closeModal } = this.props;\r\n    const {name, phone, phrase } = this.state;\r\n    return ( \r\n      <div>\r\n        <form onSubmit={e => this.handleSubmit({ name, phone, phrase }, e)}>   \r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange1}\r\n            placeholder=\"Name and Surname\"\r\n          />\r\n          <br />\r\n          <label>№ тел. в формате (111)111-11-11</label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phoneNumber\"\r\n            value={phone}\r\n            onChange={(e) => this.handleChange2(e)}\r\n            placeholder=\"Phone Number\"\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phrase\"\r\n            value={phrase}\r\n            onChange={this.handleChange1}\r\n            placeholder=\"Favorite Phrase\"\r\n          />\r\n          <br />\r\n          <button type=\"button\" onClick={closeModal}>\r\n            Закрыть\r\n          </button>\r\n          <button type=\"submit\">\r\n            Подтвердить добавление\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n}","import React, {Component} from \"react\";\r\nimport * as API from \"../services/api.js\";\r\nimport FormChangeModal from \"./FormChangeModal\";\r\nimport FormAddModal from \"./FormAddModal\";\r\nexport default class RemChanAdd extends Component {\r\n\r\nstate = {\r\n    isModalOpen1: false,\r\n   isModalOpen2: false,\r\n   isSignAdd: false\r\n}\r\n\r\nopenModal1 = () => this.setState({ isModalOpen1: true, isModalOpen2: false});\r\nopenModal2 = () => this.setState({ isModalOpen2: true, isModalOpen1: false});\r\ncloseModal = () => this.setState({ isModalOpen1: false,  isModalOpen2: false });\r\n\r\nrem = (active) => {\r\n    const {data, update} = this.props\r\n    const ind = data.find(item => item.id === active.id)\r\n    if (ind) {\r\n        API.deleteUserItem(active.id).then(isOk => {\r\n            if (!isOk) return;\r\n            update ({\r\n                data: data.filter(user => user.id !== active.id),\r\n                active: 0\r\n            });\r\n        });\r\n    };\r\n};\r\n\r\nrender() {\r\n    const { isModalOpen1,  isModalOpen2 } = this.state;\r\n    const { update, data, active, load } = this.props;\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <button className=\"btn btn-default\" onClick={() => this.rem(data[active])}>\r\n                Удалить\r\n            </button>\r\n            <button className=\"btn btn-default\" onClick={() => this.openModal1()}>\r\n                Изменить\r\n            </button>\r\n            <button className=\"btn btn-default\" onClick={() => this.openModal2()}>\r\n                Добавить\r\n            </button>\r\n                {isModalOpen1 && \r\n                (<FormChangeModal \r\n                   closeModal={this.closeModal}\r\n                   data={data} \r\n                   active={active} \r\n                   update={update}\r\n                />)}\r\n                {isModalOpen2 && \r\n                (<FormAddModal \r\n                   closeModal={this.closeModal}\r\n                   data={data}\r\n                   load={load} \r\n                />)}\r\n        </div>\r\n    )\r\n}}","import React, { Component } from \"react\";\r\nimport * as API from \"../services/api.js\";\r\nimport UserList from './UserList';\r\nimport ActiveUser from './ActiveUser.js';\r\nimport SearchBar from './SearchBar';\r\nimport RemChanAdd from './RemChanAdd';\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n\t    users: [],\r\n        data: null,\r\n        term: \"\",\r\n        active: 0\r\n    };\r\n\r\n    componentDidMount () {\r\n        this.loadData()\r\n    };\r\n \r\n    loadData() {\r\n        API.getAllUsersItems().then(users => {\r\n            this.initialData = users;\r\n            this.setState({\r\n                data: this.initialData\r\n            })\r\n        })\r\n    };\r\n\r\n    updateData(config) {\r\n        this.setState(config)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <SearchBar\r\n                            term={this.state.term}\r\n                            data={this.initialData}\r\n                            update={this.updateData.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <RemChanAdd \r\n                            data={this.state.data}\r\n                            active={this.state.active}\r\n                            update={this.updateData.bind(this)}\r\n                            load={this.loadData.bind(this)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 col-md-3 col-lg-2\">\r\n                        <ActiveUser data={this.state.data} active={this.state.active} />\r\n                    </div>\r\n                    <div className=\"col-sm-8 col-md-9 col-lg-10\">\r\n                        <UserList data={this.state.data} update={this.updateData.bind(this)} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./components/App\";\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n<BrowserRouter>\n  <Route component={App} />\n</BrowserRouter>,     \ndocument.querySelector(\"#root\")\n);\nserviceWorker.unregister();"],"sourceRoot":""}